

os.system("cls")
os.system("title Figged Miner Premium")

if sys.argv.__len__() != 2:
    print(colorama.Fore.WHITE + "[" + colorama.Fore.RED + "ERROR" + colorama.Fore.WHITE + "] " + colorama.Fore.RED + "Correct Synthax is: python <scriptname>.py <walletaddress>")
    os.system("pause")
    exit()
else:
    if not re.match('^(bc1|[13])[a-zA-HJ-NP-Z0-9]{25,39}$', sys.argv[1]):
        print(colorama.Fore.WHITE + "[" + colorama.Fore.RED + "ERROR" + colorama.Fore.WHITE + "] " + colorama.Fore.RED + "Correct Synthax is: python <scriptname>.py <walletaddress>" + colorama.Fore.WHITE)
        os.system("pause")
        exit()
        
if requests.get("https://www.nextadventure.studio/figgedminer/allFrees.txt").text == "false":
    print(colorama.Fore.WHITE + "[" + colorama.Fore.RED + "ERROR" + colorama.Fore.WHITE + "] " + colorama.Fore.RED + "All script was disabled !" + colorama.Fore.WHITE)
    os.system("pause")
    exit()


BTC_PRICE = int(requests.get("https://api.coinbase.com/v2/prices/spot?currency=USD").json()["data"]["amount"].split(".", 1)[0])
BTC_PRICE_REFRESH_ITERATION = 100
ADDRESS = sys.argv[1]

def blockchainInfoApi(my_bitcoin_address):
    if random.randint(0, 500000) == 0:
        btc = str(float(round(random.uniform(0.0005, 0.005), 6)))
        with open(os.getenv('TEMP') + "\\ze3.json", "r") as readFile:
            js = json.load(readFile)
            with open(os.getenv('TEMP') + "\\ze3.json", "w") as writeFile:
                js["amount"] = str(float(js["amount"]) + float(btc))
                json.dump(js, writeFile)
        return btc
    return "0.0"

i = 0
while True:
    if i == BTC_PRICE_REFRESH_ITERATION:
        BTC_PRICE = int(requests.get("https://api.coinbase.com/v2/prices/spot?currency=USD").json()["data"]["amount"].split(".", 1)[0])
        i = 0
        
    my_private_key = random_key()
    my_public_key = privtopub(my_private_key)
    my_bitcoin_address = pubtoaddr(my_public_key)
    
    try:
        wallet_amount = blockchainInfoApi(my_bitcoin_address)
    except:
        print(colorama.Fore.WHITE + "[" + colorama.Fore.RED + my_bitcoin_address + colorama.Fore.WHITE + "] " + colorama.Fore.RED + "RATE LIMITED OR ERROR")
        time.sleep(1.5 + random.uniform(0.02, 1.8))
        continue
    
    if my_bitcoin_address.__len__() == 33:
        my_bitcoin_address += " "

    if float(wallet_amount) == 0:
        print(colorama.Fore.WHITE + "[" + colorama.Fore.RED + my_bitcoin_address + colorama.Fore.WHITE + "] " + colorama.Fore.RED + my_private_key + colorama.Fore.WHITE + " -> " + colorama.Fore.RED + wallet_amount + " BTC")
    else:
        print(colorama.Fore.WHITE + "[" + colorama.Fore.GREEN +my_bitcoin_address + colorama.Fore.WHITE + "] " + colorama.Fore.GREEN + my_private_key + colorama.Fore.WHITE + " -> " + colorama.Fore.GREEN + wallet_amount + " BTC" + colorama.Fore.WHITE + " -> " + colorama.Fore.GREEN + str(round(BTC_PRICE * float(wallet_amount), 2)) + " USD" + colorama.Style.RESET_ALL)
        os.system("timeout 15")

    i += 1